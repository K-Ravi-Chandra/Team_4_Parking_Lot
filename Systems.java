import java.util.ArrayList;
import java.util.Scanner;
public class Systems{
    Scanner in=new Scanner(System.in);
    ParkingLot lot=ParkingLot.getInstance();
    //checking for a floor with availability of the particular vehicleType
    int availableFloor(vehicletype vehicle){
        String s1=vehicle.toString(),s2;
        int total = lot.floor.size();
        for(int i=1;i<=total;i++){
            int totalspotsinthatfloor= lot.floor.get(i-1).spots.size();
            for(int j=1;j<=totalspotsinthatfloor;j++){
                s2=lot.floor.get(i-1).spots.get(j-1).getSpotType().toString();
                if(s1.equals(s2) && lot.floor.get(i-1).spots.get(j-1).isAvailable){
                    return i;
                }
            }
        }
        System.out.println("No Floors are available");
        return -1;
    }
    //finding nearest spot for a particular vehicleType
    int findNearestSpot(int i,vehicletype vehicle){
        int totalSpotsInTheFloor= lot.floor.get(i-1).spots.size();
        String s1=vehicle.toString(),s2;
        for (int j = 1; j <= totalSpotsInTheFloor; j++) {
            s2=lot.floor.get(i-1).spots.get(j-1).getSpotType().toString();
            if (s1.equals(s2) && lot.floor.get(i-1).spots.get(j-1).isAvailable) {
                return j;
            }
        }
        System.out.println("No Spots are available");
        return -1;
    }
    //changing Availability of parkingSpots based on the conditions(whether it is occupied or not)...
    void AssignSpot(int floor,int spot){ //Give the corresponding spotNo as parameter
        lot.floor.get(floor-1).spots.get(spot-1).changeAvailability();
    }
    void releaseSpot(int floor,int spot){
        lot.floor.get(floor-1).spots.get(spot-1).changeAvailability();
    }
    //Ticket Generated by the System...
    Ticket giveTicket(vehicletype x,int number){
        String EntryTime,EntryDate;
        System.out.print("Enter Time in Format: hh/mm -");
        EntryTime=in.next();
        System.out.print("Enter Date in the format: dd/mm/yyyy -");
        EntryDate=in.next();
        Ticket a;
        int y=availableFloor(x);

        if(y==-1){
            //System.out.println("No Spots are Available!!");
            return a=new Ticket(0,0,"",0,"");
        }
        else{
            int z=findNearestSpot(y,x);
            if(z!=-1){
                a=new Ticket(y,z,EntryTime,number,EntryDate);
                AssignSpot(y,z);
                return a;
            }
            else{
                return a=new Ticket(0,0,"",0,"");
            }
        }

    }
    //openingExitGate when customer has paid...and setting spot availability back to normal;
    void openExitGate(int floor,int spot){
        releaseSpot(floor,spot);
    }
}
